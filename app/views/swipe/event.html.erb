<div class="dating-app-container">
  <!-- Header with back button -->
  <div class="app-header">
    <%= link_to swipe_path, class: "back-button" do %>
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <polyline points="15,18 9,12 15,6"/>
      </svg>
    <% end %>
    
    <div class="header-title">
      <h2><%= @event.title %></h2>
    </div>
    
    <div class="placeholder"></div>
  </div>

  <!-- Split Screen Swipe Interface -->
  <div id="people-mode" class="swipe-mode active">
    <% if @users_to_swipe.any? %>
      <!-- Fixed Action Buttons -->
      <button class="fixed-action-btn pass-btn" data-action="pass">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <line x1="18" y1="6" x2="6" y2="18"/>
          <line x1="6" y1="6" x2="18" y2="18"/>
        </svg>
      </button>
      
      <button class="fixed-action-btn like-btn" data-action="like">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
        </svg>
      </button>

      <div class="split-screen-container">
        <% @users_to_swipe.each_with_index do |user, index| %>
          <div class="user-profile" data-user-id="<%= user.id %>" data-index="<%= index %>" style="<%= index == 0 ? 'display: flex;' : 'display: none;' %>">
            
            <!-- Left Side - Images -->
            <div class="images-section">
              <div class="photo-carousel">
                <div class="main-photo">
                  <div class="avatar-photo">
                    <%= user.first_name.first.upcase %><%= user.last_name.first.upcase %>
                  </div>
                </div>
                <div class="photo-indicators">
                  <div class="indicator active"></div>
                  <div class="indicator"></div>
                  <div class="indicator"></div>
                </div>
              </div>
            </div>

            <!-- Right Side - Details -->
            <div class="details-section">
              <div class="profile-header">
                <h1><%= user.first_name %> <span class="age"><%= user.age || '24' %></span></h1>
                <div class="location">
                  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                    <circle cx="12" cy="10" r="3"/>
                  </svg>
                  <%= user.location_display %>
                </div>
              </div>

              <div class="profile-content">
                <!-- Bio Section -->
                <% if user.bio.present? %>
                  <div class="info-card">
                    <div class="info-icon">üìù</div>
                    <div class="info-content">
                      <h3>About <%= user.first_name %></h3>
                      <p><%= user.bio %></p>
                    </div>
                  </div>
                <% end %>

                <!-- Interests -->
                <% if user.interests_array.any? %>
                  <div class="info-card">
                    <div class="info-icon">üí´</div>
                    <div class="info-content">
                      <h3>Interests</h3>
                      <div class="interest-tags">
                        <% user.interests_array.each do |interest| %>
                          <span class="interest-tag"><%= interest %></span>
                        <% end %>
                      </div>
                    </div>
                  </div>
                <% else %>
                  <div class="info-card">
                    <div class="info-icon">üí´</div>
                    <div class="info-content">
                      <h3>Interests</h3>
                      <div class="interest-tags">
                        <span class="interest-tag">üéµ Music</span>
                        <span class="interest-tag">üèÉ‚Äç‚ôÇÔ∏è Running</span>
                        <span class="interest-tag">üìö Reading</span>
                        <span class="interest-tag">‚úàÔ∏è Travel</span>
                        <span class="interest-tag">üçï Food</span>
                      </div>
                    </div>
                  </div>
                <% end %>

                <!-- Event Connection -->
                <div class="info-card">
                  <div class="info-icon">üéâ</div>
                  <div class="info-content">
                    <h3>Event Connection</h3>
                    <div class="event-badge">
                      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"/>
                        <line x1="16" y1="2" x2="16" y2="6"/>
                        <line x1="8" y1="2" x2="8" y2="6"/>
                        <line x1="3" y1="10" x2="21" y2="10"/>
                      </svg>
                      <span>Going to <%= @event.title %></span>
                    </div>
                  </div>
                </div>

                <!-- Professional Info -->
                <% if user.education.present? || user.occupation.present? || user.height.present? || user.city.present? %>
                  <div class="info-card">
                    <div class="info-icon">üìã</div>
                    <div class="info-content">
                      <h3>About Me</h3>
                      <div class="fact-list">
                        <% if user.education.present? %>
                          <div class="fact-item">
                            <span class="fact-icon">üéì</span>
                            <span><%= user.education %></span>
                          </div>
                        <% end %>
                        <% if user.occupation.present? %>
                          <div class="fact-item">
                            <span class="fact-icon">üíº</span>
                            <span><%= user.occupation %></span>
                          </div>
                        <% end %>
                        <% if user.height.present? %>
                          <div class="fact-item">
                            <span class="fact-icon">üìè</span>
                            <span><%= user.height %></span>
                          </div>
                        <% end %>
                        <% if user.city.present? %>
                          <div class="fact-item">
                            <span class="fact-icon">üè†</span>
                            <span>Lives in <%= user.city %></span>
                          </div>
                        <% end %>
                      </div>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    <% else %>
      <div class="empty-state">
        <div class="empty-illustration">
          <svg viewBox="0 0 200 200" fill="none">
            <circle cx="100" cy="100" r="80" stroke="#E5E7EB" stroke-width="2" fill="#F9FAFB"/>
            <path d="M70 85 Q100 65 130 85" stroke="#9CA3AF" stroke-width="2" fill="none"/>
            <circle cx="85" cy="90" r="3" fill="#9CA3AF"/>
            <circle cx="115" cy="90" r="3" fill="#9CA3AF"/>
            <path d="M85 110 Q100 120 115 110" stroke="#9CA3AF" stroke-width="2" fill="none"/>
          </svg>
        </div>
        <h2>That's everyone!</h2>
        <p>You've seen all the people attending this event. Check back later for new attendees!</p>
        <%= link_to "Browse Other Events", events_path, class: "btn btn-primary" %>
      </div>
    <% end %>
  </div>
</div>

<!-- Match Modal -->
<div id="matchModal" class="match-modal">
  <div class="match-content">
    <div class="match-animation">
      <div class="heart-burst">üíñ</div>
      <h2>It's a Match!</h2>
      <p>You and <span id="matchedUserName"></span> liked each other at <%= @event.title %>!</p>
    </div>
    <div class="match-actions">
      <button id="keepSwiping" class="btn-secondary">Keep Swiping</button>
      <button id="sendMessage" class="btn-primary">Send Message</button>
    </div>
  </div>
</div>

<style>
  .dating-app-container {
    min-height: 100vh;
    background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%);
    position: relative;
  }

  .app-header {
    position: sticky;
    top: 0;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid #e5e7eb;
    padding: 1rem 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    z-index: 100;
  }

  .back-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 44px;
    height: 44px;
    background: #f3f4f6;
    border: none;
    border-radius: 50%;
    color: #374151;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .back-button:hover {
    background: #e5e7eb;
    transform: scale(1.05);
  }

  .back-button svg {
    width: 20px;
    height: 20px;
  }

  .header-title {
    flex: 1;
    text-align: center;
  }

  .placeholder {
    width: 44px;
  }

  /* Swipe Mode */
  .swipe-mode {
    display: none;
    position: relative;
    min-height: calc(100vh - 80px);
  }

  .swipe-mode.active {
    display: block;
  }

  /* Fixed Action Buttons */
  .fixed-action-btn {
    position: fixed;
    top: 50%;
    transform: translateY(-50%);
    width: 80px;
    height: 80px;
    border: none;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    z-index: 50;
  }

  .fixed-action-btn:hover {
    transform: translateY(-50%) scale(1.1);
  }

  .fixed-action-btn:active {
    transform: translateY(-50%) scale(0.95);
  }

  .fixed-action-btn svg {
    width: 32px;
    height: 32px;
    stroke-width: 2.5;
  }

  .pass-btn {
    left: 2rem;
    background: #ffffff;
    color: #ef4444;
    border: 4px solid #fee2e2;
  }

  .pass-btn:hover {
    background: #fef2f2;
    border-color: #fecaca;
    box-shadow: 0 12px 40px rgba(239, 68, 68, 0.3);
  }

  .like-btn {
    right: 2rem;
    background: #10b981;
    color: #ffffff;
    border: 4px solid #10b981;
  }

  .like-btn:hover {
    background: #059669;
    border-color: #059669;
    box-shadow: 0 12px 40px rgba(16, 185, 129, 0.3);
  }

  /* Split Screen Layout */
  .split-screen-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .user-profile {
    display: none;
    width: 100%;
    min-height: calc(100vh - 140px);
    background: #ffffff;
    border-radius: 24px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
    overflow: hidden;
  }

  .user-profile[style*="display: flex"] {
    display: flex !important;
  }

  /* Images Section - Left Side */
  .images-section {
    flex: 1;
    background: linear-gradient(135deg, #ff6b6b 0%, #feca57 100%);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 600px;
  }

  .photo-carousel {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .main-photo {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .avatar-photo {
    width: 200px;
    height: 200px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 4rem;
    font-weight: 700;
    color: #ffffff;
    backdrop-filter: blur(10px);
    border: 4px solid rgba(255, 255, 255, 0.3);
  }

  .photo-indicators {
    position: absolute;
    top: 20px;
    left: 20px;
    right: 20px;
    display: flex;
    gap: 8px;
  }

  .photo-indicators .indicator {
    flex: 1;
    height: 4px;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 2px;
    transition: all 0.3s ease;
  }

  .photo-indicators .indicator.active {
    background: #ffffff;
  }

  /* Details Section - Right Side */
  .details-section {
    flex: 1;
    padding: 2rem;
    overflow-y: auto;
    max-height: 100vh;
  }

  .profile-header {
    text-align: center;
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid #f3f4f6;
  }

  .profile-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
  }

  .age {
    background: #111827;
    color: #ffffff;
    padding: 0.5rem 1rem;
    border-radius: 25px;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .location {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    color: #6b7280;
    font-size: 1.125rem;
    font-weight: 500;
    margin-top: 0.75rem;
  }

  .location svg {
    width: 20px;
    height: 20px;
  }

  /* Profile Content */
  .profile-content {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .info-card {
    background: #f8fafc;
    border: 1px solid #e5e7eb;
    border-radius: 16px;
    padding: 1.5rem;
    display: flex;
    gap: 1rem;
    transition: all 0.3s ease;
  }

  .info-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .info-icon {
    font-size: 1.5rem;
    min-width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .info-content {
    flex: 1;
  }

  .info-content h3 {
    color: #111827;
    font-size: 1.125rem;
    font-weight: 700;
    margin-bottom: 0.75rem;
  }

  .info-content p {
    color: #374151;
    line-height: 1.6;
    font-size: 1rem;
  }

  .interest-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .interest-tag {
    background: #ffffff;
    color: #374151;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
    border: 1px solid #d1d5db;
  }

  .event-badge {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    background: #ffffff;
    padding: 1rem;
    border-radius: 12px;
    border: 1px solid #d1d5db;
  }

  .event-badge svg {
    width: 20px;
    height: 20px;
    color: #6366f1;
  }

  .fact-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .fact-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    background: #ffffff;
    padding: 0.75rem;
    border-radius: 12px;
    border: 1px solid #d1d5db;
  }

  .fact-icon {
    font-size: 1.125rem;
  }

  /* Empty State */
  .empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 60vh;
    text-align: center;
    padding: 2rem;
  }

  .empty-illustration {
    width: 120px;
    height: 120px;
    margin-bottom: 2rem;
    opacity: 0.6;
  }

  .empty-state h2 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.5rem;
  }

  .empty-state p {
    color: #6b7280;
    margin-bottom: 2rem;
    max-width: 300px;
    line-height: 1.5;
  }

  /* Match Modal */
  .match-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    z-index: 2000;
    animation: fadeIn 0.3s ease;
  }

  .match-modal.show {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .match-content {
    background: #ffffff;
    border-radius: 20px;
    padding: 3rem 2rem;
    margin: 1rem;
    max-width: 400px;
    width: 100%;
    text-align: center;
    animation: slideInUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .match-animation {
    margin-bottom: 2rem;
  }

  .heart-burst {
    font-size: 4rem;
    margin-bottom: 1rem;
    animation: heartPulse 1s ease infinite;
  }

  @keyframes heartPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
  }

  .match-content h2 {
    font-size: 2rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.5rem;
  }

  .match-content p {
    color: #6b7280;
    margin-bottom: 2rem;
    line-height: 1.5;
  }

  .match-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .btn-secondary, .btn-primary {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 12px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    min-width: 120px;
  }

  .btn-secondary {
    background: #f3f4f6;
    color: #6b7280;
  }

  .btn-secondary:hover {
    background: #e5e7eb;
  }

  .btn-primary {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: #ffffff;
  }

  .btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .user-profile {
      flex-direction: column;
    }

    .images-section {
      min-height: 400px;
    }

    .avatar-photo {
      width: 150px;
      height: 150px;
      font-size: 3rem;
    }

    .details-section {
      max-height: none;
    }

    .profile-header h1 {
      font-size: 2rem;
      flex-direction: column;
      gap: 0.5rem;
    }

    .fixed-action-btn {
      width: 60px;
      height: 60px;
      left: 1rem;
      right: 1rem;
    }

    .fixed-action-btn svg {
      width: 24px;
      height: 24px;
    }

    .split-screen-container {
      padding: 1rem;
    }

    .match-content {
      padding: 2rem 1.5rem;
    }

    .match-actions {
      flex-direction: column;
    }
  }
</style>

<script>
  let currentUserIndex = 0;
  let totalUsers = 0;

  document.addEventListener('DOMContentLoaded', function() {
    initializeUserSwipe();
  });

  function initializeUserSwipe() {
    const userProfiles = document.querySelectorAll('.user-profile');
    totalUsers = userProfiles.length;
    
    if (totalUsers === 0) return;

    // Show first user
    showCurrentUser();
    
    // Add event listeners to fixed action buttons
    document.querySelectorAll('.fixed-action-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const action = this.dataset.action;
        const currentProfile = document.querySelector('.user-profile[style*="display: flex"]');
        const userId = currentProfile.dataset.userId;
        
        handleUserSwipe(userId, action);
      });
    });
  }

  function showCurrentUser() {
    const userProfiles = document.querySelectorAll('.user-profile');
    
    userProfiles.forEach((profile, index) => {
      if (index === currentUserIndex) {
        profile.style.display = 'flex';
      } else {
        profile.style.display = 'none';
      }
    });
  }

  function handleUserSwipe(userId, action) {
    const currentProfile = document.querySelector('.user-profile[style*="display: flex"]');
    
    // Add visual feedback
    currentProfile.style.transition = 'all 0.4s ease';
    
    if (action === 'pass') {
      currentProfile.style.transform = 'translateX(-100%) rotate(-5deg)';
      currentProfile.style.opacity = '0';
    } else if (action === 'like') {
      currentProfile.style.transform = 'translateX(100%) rotate(5deg)';
      currentProfile.style.opacity = '0';
    }

    // Submit the swipe
    let direction = action === 'pass' ? 'left' : 'right';

    fetch(`/swipe/user`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({
        event_id: <%= @event.id %>,
        swiped_user_id: userId,
        direction: direction
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.match) {
        showMatchModal(data.user.name);
      }
    })
    .catch(error => console.error('Error:', error));

    // Move to next user after animation
    setTimeout(() => {
      currentUserIndex++;
      
      if (currentUserIndex >= totalUsers) {
        showEmptyState();
      } else {
        // Reset transform and show next user
        currentProfile.style.transform = '';
        currentProfile.style.opacity = '';
        showCurrentUser();
      }
    }, 400);
  }

  function showEmptyState() {
    const container = document.querySelector('.split-screen-container');
    container.innerHTML = `
      <div class="empty-state">
        <div class="empty-illustration">
          <svg viewBox="0 0 200 200" fill="none">
            <circle cx="100" cy="100" r="80" stroke="#E5E7EB" stroke-width="2" fill="#F9FAFB"/>
            <path d="M70 85 Q100 65 130 85" stroke="#9CA3AF" stroke-width="2" fill="none"/>
            <circle cx="85" cy="90" r="3" fill="#9CA3AF"/>
            <circle cx="115" cy="90" r="3" fill="#9CA3AF"/>
            <path d="M85 110 Q100 120 115 110" stroke="#9CA3AF" stroke-width="2" fill="none"/>
          </svg>
        </div>
        <h2>That's everyone!</h2>
        <p>You've seen all the people attending this event. Check back later for new attendees!</p>
        <a href="/events" class="btn btn-primary">Browse Other Events</a>
      </div>
    `;
    
    // Hide fixed buttons when no more users
    document.querySelectorAll('.fixed-action-btn').forEach(btn => {
      btn.style.display = 'none';
    });
  }

  function showMatchModal(userName) {
    const modal = document.getElementById('matchModal');
    const userNameSpan = document.getElementById('matchedUserName');
    
    userNameSpan.textContent = userName;
    modal.classList.add('show');

    document.getElementById('sendMessage').addEventListener('click', function() {
      window.location.href = '/matches';
    });

    document.getElementById('keepSwiping').addEventListener('click', function() {
      modal.classList.remove('show');
    });
  }
</script> 